apply from: 'buildMicroservices.gradle'
apply from: 'buildMonolithic.gradle'

subprojects {
    apply plugin: 'java'
	apply plugin: "war"
	apply plugin: 'eclipse-wtp'
	apply plugin: 'idea'


    version = '0.0.1'
    description = "Exploring microservices"

    sourceCompatibility = 1.8

    repositories {
       mavenCentral()
       jcenter()
    }

    //
    // Define project library versions
    //
    ext {
        springVersion = "4.1.6.RELEASE"
        springBootVersion = "1.2.3.RELEASE"
        junitVersion = "4.11"
        jacksonCoreVersion = "2.5.2"
        javaxServletApiVersion = "3.1.0"
    }

    dependencies {
        compile 'com.fasterxml.jackson.core:jackson-core:' + jacksonCoreVersion
        compile 'com.fasterxml.jackson.core:jackson-databind:' + jacksonCoreVersion

        testCompile 'junit:junit:' + junitVersion
    }

	processResources {
	    expand project.properties
	}


    ext.sharedManifest = manifest {
            attributes('provider' : 'gradle',
                       'Implementation-Title': project.name,
                       'Implementation-Version': project.version,
                       'Implementation-Description': project.description,
                       'Build-By': System.getProperty('user.name'),
                       'Build-JDK': System.getProperty('java.version'),
                       'Build-Time': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
			           'Source-Compatibility': project.sourceCompatibility,
			           'Target-Compatibility': project.targetCompatibility)
    }

    jar {
        manifest = project.manifest {
            from sharedManifest
        }
    }


    war {
        manifest = project.manifest {
            from sharedManifest
        }
    }


    //
    // Setup IDE
    //
	eclipse {
	    classpath {
	       downloadSources=true
	       downloadJavadoc=true
	    }
	}

	idea {
	    module {
	        downloadJavadoc = true
	        downloadSources = true
        }
    }

    task wrapper(type: Wrapper) {
        gradleVersion = '2.4'
    }

}
